<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Api</name>
    </assembly>
    <members>
        <member name="T:Api.Extensions.AuthenticationExtensions">
            <summary>
            Extensões de autenticação
            </summary>
        </member>
        <member name="M:Api.Extensions.AuthenticationExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configura a autenticação JWT
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.Extensions.AutoMapper.DefaultProfile">
            <summary>
            Perfil padrão do automapper
            </summary>
        </member>
        <member name="M:Api.Extensions.AutoMapper.DefaultProfile.#ctor">
            <summary>
            Construtor
            </summary>
        </member>
        <member name="T:Api.Extensions.ConfigurationExtensions">
            <summary>
            Extensões de configuração (IOptions)
            </summary>
        </member>
        <member name="M:Api.Extensions.ConfigurationExtensions.AddConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adiciona algumas classes de configuração para injeção.
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:Api.Extensions.DevelopmentExtensions">
            <summary>
            Classe de extensões específicas para ambiente de desenvolvimento
            </summary>
        </member>
        <member name="M:Api.Extensions.DevelopmentExtensions.AddDevelopmentServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona os repositórios de mock na injeção de dependência
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Api.Extensions.DevelopmentExtensions.AddDevelopmentLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona os serviços de logging específicos para desenvolvimento
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.Extensions.HealthCheckExtensions">
            <summary>
            Extensões para checagem de saúde da API
            </summary>
        </member>
        <member name="M:Api.Extensions.HealthCheckExtensions.AddCustomHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona as checagens de saúde
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.Extensions.HealthCheck.EFCoreHealthCheck`1">
            <summary>
            Health Check genérico para conexões com bancos de dados.
            </summary>
        </member>
        <member name="M:Api.Extensions.HealthCheck.EFCoreHealthCheck`1.#ctor(`0)">
            <summary>
            Construtor
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Api.Extensions.LocalizationExtentions">
            <summary>
            Extensões para localização
            </summary>
        </member>
        <member name="M:Api.Extensions.LocalizationExtentions.AddCustomLocalization(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configuração básica de localização
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.Extensions.SerializerExtensions">
            <summary>
            Métodos de extensão para configuração da serialização
            </summary>
        </member>
        <member name="M:Api.Extensions.SerializerExtensions.AddCustomJSONOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Configuração de serialização de JSON
            </summary>
            <param name="mvcBuilder"></param>
        </member>
        <member name="T:Api.Extensions.ServicesExtensions">
            <summary>
            Extensões de serviços
            </summary>
        </member>
        <member name="M:Api.Extensions.ServicesExtensions.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona os serviços na injeção de dependência
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.Extensions.StagingExtensions">
            <summary>
            Classe de extensões específicas para ambiente de staging
            </summary>
        </member>
        <member name="M:Api.Extensions.StagingExtensions.AddStagingServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona os repositórios na injeção de dependência
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.Extensions.SwaggerGenExtensions">
            <summary>
            Extensões do SwaggerGen
            </summary>
        </member>
        <member name="M:Api.Extensions.SwaggerGenExtensions.AddCustomSwaggerGen(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configuração básica do SwaggerGen
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.Extensions.Swagger.ConfigureSwaggerOptions">
            <summary>
            Configures the Swagger generation options.
            </summary>
            <remarks>This allows API versioning to define a Swagger document per API version after the
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider"/> service has been resolved from the service container.</remarks>
        </member>
        <member name="M:Api.Extensions.Swagger.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider,Microsoft.Extensions.Options.IOptions{Microsoft.OpenApi.Models.OpenApiInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Api.Extensions.Swagger.ConfigureSwaggerOptions"/> class.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.</param>
            <param name="info"></param>
        </member>
        <member name="T:Api.Extensions.Swagger.SwaggerBearerAuthentication">
            <summary>
            Filtro para exibição correta por parte do swagger de endpoints que necessitam de autenticação.
            </summary>
        </member>
        <member name="T:Api.Extensions.Swagger.SwaggerDefaultValues">
            <summary>
            Represents the Swagger/Swashbuckle operation filter used to document the implicit API version parameter.
            </summary>
            <remarks>This <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter"/> is only required due to bugs in the <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator"/>.
            Once they are fixed and published, this class can be removed.</remarks>
        </member>
        <member name="T:Api.Extensions.Swagger.SwaggerLanguageHeader">
            <summary>
            Adiciona um header para seleção de linguagem em TODOS os endpoints
            
            https://dejanstojanovic.net/aspnet/2019/april/localization-of-the-dtos-in-a-separate-assembly-in-aspnet-core/
            </summary>
        </member>
        <member name="M:Api.Extensions.Swagger.SwaggerLanguageHeader.#ctor(System.IServiceProvider)">
            <summary>
            Construtor
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="T:Api.Extensions.VersioningExtensions">
            <summary>
            Extensões de versionamento
            </summary>
        </member>
        <member name="M:Api.Extensions.VersioningExtensions.AddCustomVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configuração básica de versionamento
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.Infrastructure.Monitoring">
            <summary>
            Realiza o monitoramento e log dos endpoints
            </summary>
        </member>
        <member name="M:Api.Infrastructure.Monitoring.#ctor(Microsoft.Extensions.Logging.ILogger{Api.Infrastructure.Monitoring})">
            <summary>
            Construtor
            </summary>
            <param name="log">logger para monitoramento de endpoints</param>
        </member>
        <member name="M:Api.Infrastructure.Monitoring.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Ao finalizar a execução
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Api.Infrastructure.Monitoring.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Antes de iniciar a execução
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Api.v0.Controllers.ErrorController">
            <summary>
            Controlador de erros da aplicação
            </summary>
        </member>
        <member name="M:Api.v0.Controllers.ErrorController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{Domain.Resources.ErrorMessages})">
            <summary>
            Construtor
            </summary>
            <param name="localizer"></param>
        </member>
        <member name="M:Api.v0.Controllers.ErrorController.Error">
            <summary>
            Endpoint de Erros de produção
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.v0.Controllers.ErrorController.ErrorDev">
            <summary>
            Endpoint de Erros de desenvolvimento
            </summary>
            <returns></returns>
        </member>
        <member name="T:Api.v0.Controllers.HealthController">
            <summary>
            Saúde da API
            </summary>
        </member>
        <member name="M:Api.v0.Controllers.HealthController.#ctor(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckService)">
            <summary>
            Construtor
            </summary>
            <param name="healthCheckService"></param>
        </member>
        <member name="M:Api.v0.Controllers.HealthController.Get">
            <summary>
            Obtém o status da API
            </summary>
            <remarks>Provém uma indicação da saúde da API</remarks>
            <response code="200">Relatório de saúde da API</response>
        </member>
        <member name="T:Api.v0.Controllers.ItemController">
            <summary>
            Requisições de gerenciamento de itens
            </summary>
        </member>
        <member name="M:Api.v0.Controllers.ItemController.#ctor(Domain.Services.IItemService,AutoMapper.IMapper)">
            <summary>
            Construtor
            </summary>
            <param name="service"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Api.v0.Controllers.ItemController.Get(Api.v0.Queries.ItemQuery)">
            <summary>
            Obtém todos os itens cadastrados
            </summary>
            <response code="200">Todos os itens cadastrados</response>
        </member>
        <member name="M:Api.v0.Controllers.ItemController.Post(Api.v0.Models.ItemTO)">
            <summary>
            Insere um novo item
            </summary>
            <param name="itemTO"></param>
            <response code="201">Item cadastrado</response>
            <response code="400">Lista de erros de validação</response>
        </member>
        <member name="M:Api.v0.Controllers.ItemController.Delete(System.String)">
            <summary>
            Remove um item
            </summary>
            <param name="key">chave do item para ser removido</param>
            <response code="204">Item removido com sucesso</response>
        </member>
        <member name="T:Api.v0.Models.ItemTO">
            <summary>
            Item de teste da api
            </summary>
        </member>
        <member name="P:Api.v0.Models.ItemTO.Key">
            <summary>
            Chave de identificação do item
            </summary>
        </member>
        <member name="P:Api.v0.Models.ItemTO.Value">
            <summary>
            Texto do item
            </summary>
        </member>
        <member name="P:Api.v0.Models.ItemTO.CreationDate">
            <summary>
            Data de criação do item
            </summary>
        </member>
        <member name="T:Api.v0.Queries.ItemQuery">
            <summary>
            Consulta de itens
            </summary>
        </member>
        <member name="P:Api.v0.Queries.ItemQuery.Key">
            <summary>
            Procura por itens com a chave igual ao valor passado
            </summary>
        </member>
        <member name="P:Api.v0.Queries.ItemQuery.CreationDateInit">
            <summary>
            Procura por itens com data de criação maior ou igual ao valor passado
            </summary>
        </member>
        <member name="P:Api.v0.Queries.ItemQuery.CreationDateEnd">
            <summary>
            Procura por itens com data de criação menor ou igual ao valor passado
            </summary>
        </member>
        <member name="T:Api.v0.Validators.ItemTOValidator">
            <summary>
            Validador de itens
            </summary>
        </member>
        <member name="M:Api.v0.Validators.ItemTOValidator.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{Domain.Resources.ErrorMessages},Domain.Repositories.IItemRepository)">
            <summary>
            Construtor
            </summary>
        </member>
    </members>
</doc>
